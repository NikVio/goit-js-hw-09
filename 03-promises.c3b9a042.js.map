{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAOA,SAASC,EAAcC,EAAUC,GAE7B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KACzB,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACHH,EACAF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAACJ,E,MAAUC,GAAO,GAE9BA,EAAM,G,CAfJQ,SAASC,cAAc,SAG/BC,iBAAiB,UAmBtB,SAAkBC,GACdA,EAAIC,iBACJ,MAAQZ,MAAAa,EAAKC,KAAEA,EAAIC,OAAEA,GAAWJ,EAAIK,cAAcC,SAClD,IAAIC,EAAaC,OAAON,EAAMO,OAC1BC,EAAYF,OAAOL,EAAKM,OACxBE,EAAcH,OAAOJ,EAAOK,OAIhC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAaC,GAAK,EAInCzB,EAAcyB,EAAGL,GACZM,MAAK,EAACzB,SAAEA,EAAQC,MAAEA,MACfyB,EAAA7B,GAAS8B,OAAOC,QAAQ,uBAAqB5B,QAAiBC,MAAU,IAErF4B,OAAM,EAAC7B,SAAEA,EAAQC,MAAEA,MAClByB,EAAA7B,GAAS8B,OAAOG,QAAQ,sBAAoB9B,QAAeC,MAAU,IAEjEkB,GAAcG,EAEjBV,EAAImB,OAAOC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form'); \n\n\nform.addEventListener('submit', onSubmit);\n\nfunction createPromise(position, delay) {\n\n    return new Promise((resolve, reject) => {\n        const shouldResolve = Math.random() > 0.3;\n        setTimeout(() => {\n            if (shouldResolve) {\n                resolve({ position, delay });\n            } else {\n                reject({position, delay})\n            }\n        }, delay);\n    });\n}\n\n\n \n\nfunction onSubmit(evt) {\n    evt.preventDefault();\n    const { delay, step, amount } = evt.currentTarget.elements;\n    let delayInput = Number(delay.value);\n    let stepInput = Number(step.value);\n    let amountInput = Number(amount.value);\n\n    \n\n    for (let i = 1; i <= amountInput; i += 1) {\n        \n        \n\n        createPromise(i, delayInput)\n            .then(({ position, delay }) => {\n                Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n            })\n  .catch(({ position, delay }) => {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n        delayInput += stepInput;\n    };\n     evt.target.reset();\n};\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","evt","preventDefault","delay1","step","amount","currentTarget","elements","delayInput","Number","value","stepInput","amountInput","i","then","$parcel$interopDefault","Notify","success","catch","failure","target","reset"],"version":3,"file":"03-promises.c3b9a042.js.map"}